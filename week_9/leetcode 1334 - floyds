int findTheCity(int n, int** edges, int edgesSize, int* edgesColSize, int distanceThreshold) {
    int** dist  = (int**)malloc(n*sizeof(int*));
    for(int i=0; i<n; i++){
        dist[i]=(int*)malloc(n*sizeof(int));
        for(int j=0; j<n; j++){
            dist[i][j] = (i==j)?0:10001;
        }
    }
    for(int i=0; i<edgesSize; i++){
        int u = edges[i][0];
        int v = edges[i][1];
        int w = edges[i][2];
        dist[u][v]=w;
        dist[v][u]=w;
    }
    for (int k = 0; k < n; k++) {
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (dist[i][k] + dist[k][j] < dist[i][j]) {
                    dist[i][j] = dist[i][k] + dist[k][j];
                }
            }
        }
    }

    int minReachable = n;
    int result = -1;

    for (int i = 0; i < n; i++) {
        int count = 0;
        for (int j = 0; j < n; j++) {
            if (i != j && dist[i][j] <= distanceThreshold) {
                count++;
            }
        }

        if (count <= minReachable) {
            minReachable = count;
            result = i; 
        }
    }

    return result;
}
